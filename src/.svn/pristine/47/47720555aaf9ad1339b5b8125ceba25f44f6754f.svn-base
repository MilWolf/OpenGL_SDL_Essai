#include "ItemHUD.h"

ItemHUD::ItemHUD()
{
}

ItemHUD::~ItemHUD()
{
}

void ItemHUD::charger(string texture)
{
	float vertices[] = {-0.5, -0.5,   0.0, 0.5,   0.5, -0.5};

	Texture t("Textures/"+texture);
	//t.charger();
}

void ItemHUD::afficher(mat4 &projection, mat4 &modelview)
{
	/*
	glMatrixMode(GL_PROJECTION);
	//glLoadIdentity();
	projection=ortho(0.0, (double) largeurFenetre / hauteurFenetre, 0.0, 10000.0);
	glMatrixMode(GL_MODELVIEW);
  
	/* etape 4 */
	//glPushMatrix();
	/*
	glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 0, vertices);
	glEnableVertexAttribArray(0);
 
 
	// On affiche le triangle
 
	glDrawArrays(GL_TRIANGLES, 0, 3);
 
 
	// On désactive le tableau Vertex Attrib puisque l'on n'en a plus besoin
 
	glDisableVertexAttribArray(0);
	
	//glPopMatrix();
	*/
}